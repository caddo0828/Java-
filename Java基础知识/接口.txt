接口的特点：
1、用关键字interface表示：
	 interface  接口名 { } 
2、类实现接口用implements 表示：
	class 类名  implements  接口名  {  } 
3、接口是抽象的，无法实例化；按照多态的方式进行实例化
4、具体类多态，抽象类多态，接口多态
5、接口的子类:
	要重写抽象类的抽象方法，或者定义为抽象类（但是此方法意义不大）

接口的成员特点：
A：成员变量：接口中的变量默认为常量（值不可以改）：
	     默认为静态的（不写也默认）可以用接口调用  接口名.变量名
	     默认修饰符： public  static  final   变量名
B：构造方法：无构造方法   （子类中的super( ) 其实调用的是Object类）
C：成员方法：接口的方法不能有主体，默认为抽象类（只能是抽象方法   public  abstract void show ( ) ;）

  所有的类都默认继承一个类 Object   


类与类的关系：
	继承关系：只能单继承，可以多层继承；


类与接口：
	实现关系：一个类可以实现多个接口（ 多个接口之间用逗号分割）
		并且可以在继承一个类的同时，实现多个接口；
		
	注意事项：对应的接口实现对应的方法


接口与接口：
  	继承关系：可以单继承，也可以多继承



抽象类和接口的区别：
A：成员区别
    	抽象类：
	     成员变量：可以常量，也可以是变量
	     构造方法：有
	     成员方法：可以抽象，也可以非抽象
             
                 接口：
	     成员变量：只能是常量
	     构造方法：无
	     成员方法：只能是抽象的

设计理念区别：
        抽象类：被继承体现是  “  is  a”的关系。抽象类所定义的是该继承体系的共性功能
        接口类；被实现是“ like a " 的关系。 接口中定义的是继承体系中的扩展功能  

	
	

