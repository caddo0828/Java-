Servlet的配置：在web.xml文件中配置
<servlet>
  	<servlet-name>dh1</servlet-name>
  	<servlet-class>dh1.MyServlet1</servlet-class>
  </servlet>

  //servlet的配置（资源地址，访问方式）

  <servlet-mapping>
  	<servlet-name>dh1</servlet-name>
  	<url-pattern>/dh1</url-pattern>
  </servlet-mapping>

Servlet的学习：
1、同一个servlet可以映射到多个URL上，也就是说<servlet-mapping>元素的<servlet-name>子元素的设置值可以是同一个servlet的注册名

2、在servlet映射到的URL中也可以使用通配符，但是只能有两种固定的格式
     一种格式是“  *.  扩展名  ”  ,   另一种格式是以正斜杆（/） 开头并且以“ /*  ”结尾

3、  在匹配servlet的时候，要参考的标准
	a：匹配度高的先选中 ( 谁长的像选谁 )    （  *  一般表示所有任意  ）
	b：* . do 的优先级别最低

4、Servlet单例问题
	当Servlet被第一次访问以后，就会被加载到内存，以后该实例对各个请求服务即在使用中是单例
	因为Servlet是单例，因此容易出现安全问题;
	售票系统：如果不加同步代码块，则会出现问题
	
	原则：
	（1）如果一个变量需要被多个用户所共享，则应当在访问该变量的时候，加同步机制
	      synchronized(对象) {     对象可以创建，一般本类中的对象用  this   表示
		同步代码块;
	      }

	(2)  当一个变量不需要被多个用户共享时，可以在doGet 和  doPost方法中创建，这样不会出现线程不安全的问题
	

5、当出现要实现自动发送数据时，可以使用   load - on - startup 和线程实现
	<load-on-startup> 可以通过配置<load-on-startup> 可以指定某个Servlet自动创建
	<load-on-startup>  1  <load-on-startup> 
	:  1 代表的是Servlet被init( ) 的顺序，也就是被启动的顺序

	例： 创建线程，在 init 方法中去创建线程对象，启动线程


6、servletConfig 对象    （ 通过getServletConfig方法获取servletConfig 对象  )
	该对象主要用于读取servlet的配置信息
1、用于配置servlet解码方式  (只能在对应的servlet读取)
	<init-param>
    	  <param-name>encoding</param-name>
     	 <param-value>utf-8<param-value>
	</init-param>

2、<context-param> 配置全局的参数，可以被多个servlet读取
	
3、如何获取servlet配置的全部信息
	A：首先获取servlet的配置对象，通过配置对象获取配置的键名（也就是配置信息的名字）, 一般是获取到枚举数组
	B：遍历枚举数组得到每一个键值对对象
	C：通过键值对对象会获取元素值



一、Tomcat 目录结构
bin : 存放启动和关闭Tomcat的脚本文件
conf : 存放Tomcat服务器的各种配置文件
work: Tomcat的工作目录
webapps : web应用所在的目录，提供外界访问的web资源的存放目录


二、Servlet的三种开发方式
1、实现servlet接口（差不多已经过时了）  但是其包含的生命周期内容重要
2、继承GenericServlet  （了解即可）
3、继承HttpServlet


三、  通过实现Servlet接口定义的Servlet
1、必须重写接口的所有成员方法
2、成员方法
	//该函数用于初始化Servlet ，将servlet装载到内存中，该方法只会被调用一次(使用反射机制，创建实例)
	public void init(ServletConfig config)

	//得到ServletConfig 对象
	public ServletConfig getServletConfig() 

	//该方法是服务方法，将业务逻辑代码写入，浏览器每次发出请求，都会调用一次
	public void service(ServletRequest req, ServletResponse resp) throws ServletException, IOException {

	//该方法得到servlet的配置信息    
	public String getServletInfo
	
	//销毁servlet，只会被调用一次，从内存中清除掉
 	public void destory() 



四、servlet的生命周期
面试题：    简述servlet的生命周期（工作流程）
  
答：1、当servlet第一次被调用时会触发Init()方法，该方法会把servlet的实例加载到内存,且init方法只会被调用一次 
       2、然后去调用servlet的service函数，
       3、当第二次后访问该servlet时，直接调用service方法
       4、当web应用 reload 或者 关闭 tomcat 或者关机 都会调用destroy 函数，该方法就会销毁servlet


	